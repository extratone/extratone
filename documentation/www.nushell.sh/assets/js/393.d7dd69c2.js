(window.webpackJsonp=window.webpackJsonp||[]).push([[393],{799:function(a,s,t){"use strict";t.r(s);var r=t(44),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"carregando-dados"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#carregando-dados"}},[a._v("#")]),a._v(" Carregando dados")]),a._v(" "),t("p",[a._v("Anteriormente vimos como você pode usar comandos como "),t("code",[a._v("ls")]),a._v(", "),t("code",[a._v("ps")]),a._v(", "),t("code",[a._v("date")]),a._v(" e "),t("code",[a._v("sys")]),a._v(" para carregar informações sobre seus arquivos, processos, data e hora e sobre o sistema em si. Cada comando retorna uma tabela de informações que podemos explorar. Há outras maneiras de se carregar uma tabela de dados com a qual trabalhar.")]),a._v(" "),t("h2",{attrs:{id:"abrindo-arquivos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abrindo-arquivos"}},[a._v("#")]),a._v(" Abrindo arquivos")]),a._v(" "),t("p",[a._v("Uma das funcionalidades mais poderosas do Nu para lidar com dados é o comando "),t("code",[a._v("open")]),a._v(". Ele é uma ferramenta múltipla, capaz de trabalhar com diversos formatos de dados. Para vermos o que isso significa, vamos tentar abrir um arquivo json:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" editors/vscode/package.json\n------+----------+----------+---------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------\n name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" descript "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" author   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" license "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" version "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" reposito "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" publishe "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" categori "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" keywords "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" engines  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" activati "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" main     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" contribu "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" scripts  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" devDepen \n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" ion      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" ry       "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" r        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" es       "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" onEvents "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" tes      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" dencies \n------+----------+----------+---------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------\n lark "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Lark     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Lark     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" MIT     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(".0   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" vscode   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("       "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" ./out/ex "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" support  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" develope "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" items"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" tension  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  \n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" VS   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" rs       "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  \n      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Code     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("          "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  \n------+----------+----------+---------+---------+----------+----------+----------+----------+----------+----------+----------+----------+----------+----------\n")])])]),t("p",[a._v("De um jeito similar ao comando "),t("code",[a._v("ls")]),a._v(', abrir um tipo de arquivo que o Nu entende vai nos retornar algo que é mais do que apenas texto (ou um fluxo de bytes). Aqui nós abrimos um arquivo "package.json" de um projeto JavaScript. O Nu abre e reconhece o texto JSON e retorna uma tabela de dados.')]),a._v(" "),t("p",[a._v("Se quisermos checar a versão do projeto que estamos olhando, podemos usar o comando "),t("code",[a._v("get")]),a._v(".")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" editors/vscode/package.json "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" get version\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v(".0\n")])])]),t("p",[a._v("O Nu atualmente suporta carregar dados diretamente para tabelas a partir dos seguintes formatos:")]),a._v(" "),t("ul",[t("li",[a._v("json")]),a._v(" "),t("li",[a._v("yaml")]),a._v(" "),t("li",[a._v("toml")]),a._v(" "),t("li",[a._v("xml")]),a._v(" "),t("li",[a._v("csv")]),a._v(" "),t("li",[a._v("ini")])]),a._v(" "),t("p",[a._v("Mas o que acontece se você carregar um arquivo texto cujo formato não é um desses? Vamos tentar:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" README.md\n")])])]),t("p",[a._v("O conteúdo do arquivo é mostrado. Se o arquivo for muito grande, obteremos uma visão rolável para examinar o arquivo e depois voltar para o terminal. Para ajudar na legibilidade, Nu faz realce de sintaxe para formatos comuns como arquivos de código fonte, markdown e outros.")]),a._v(" "),t("p",[a._v("Por baixo dos panos, o que o Nu enxerga nesses arquivos texto é uma grande string. A seguir, vamos falar sobre como trabalhar com essas strings para obter os dados que precisamos delas.")]),a._v(" "),t("h2",{attrs:{id:"trabalhando-com-strings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trabalhando-com-strings"}},[a._v("#")]),a._v(" Trabalhando com strings")]),a._v(" "),t("p",[a._v("Uma parte importante de se trabalhar com dados vindos de fora do Nu é que eles nem sempre vêm num formato que o Nu entende. Com frequência, esses dados são passados como uma string.")]),a._v(" "),t("p",[a._v("Vamos imaginar que obtivemos esse arquivo de dados:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" people.txt\nOctavia "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Butler "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Writer\nBob "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Ross "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Painter\nAntonio "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Vivaldi "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Composer\n")])])]),t("p",[a._v("Cada pedacinho de dado que queremos está separado pelo símbolo de pipe ('|') e cada pessoa está numa linha em separado. Nu não possui por padrão um formato de arquivos delimitados por pipe, então teremos que interpretá-lo nós mesmos.")]),a._v(" "),t("p",[a._v("A primeira coisa que queremos fazer ao carregar o arquivo é trabalhar com ele linha a linha:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" people.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" lines\n---+------------------------------\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# | value ")]),a._v("\n---+------------------------------\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Octavia "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Butler "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Writer \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Bob "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Ross "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Painter \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Antonio "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Vivaldi "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Composer \n---+------------------------------\n")])])]),t("p",[a._v("Podemos notar que estamos lidando com linhas porque voltamos a ver uma tabela. Nosso próximo passo é tentar dividir as linhas em algo um pouco mais útil. Para isso, vamos usar o comando "),t("code",[a._v("split column")]),a._v(". Como o nome implica, esse comando nos dá uma forma de dividir em colunas uma string delimitada. Informamos qual é o delimitador e o comando faz o resto:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" people.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" lines "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("column")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"|"')]),a._v("\n---+----------+-----------+-----------\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# | Column1  | Column2   | Column3 ")]),a._v("\n---+----------+-----------+-----------\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Octavia  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  Butler   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  Writer \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Bob      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  Ross     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  Painter \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Antonio  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  Vivaldi  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v("  Composer \n---+----------+-----------+-----------\n")])])]),t("p",[a._v("Está quase certo. Parece que tem um espaço extra ali. Vamos mudar nosso delimitador:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" people.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" lines "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("column")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" | "')]),a._v("\n---+---------+---------+----------\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# | Column1 | Column2 | Column3 ")]),a._v("\n---+---------+---------+----------\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Octavia "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Butler  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Writer \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Bob     "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Ross    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Painter \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Antonio "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Vivaldi "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Composer \n---+---------+---------+----------\n")])])]),t("p",[a._v("Nada mal. O comando "),t("code",[a._v("split column")]),a._v(" retorna dados que podemos usar. Ele também vai além e nos dá nomes de coluna padrão:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" people.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" lines "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("column")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" | "')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" get Column1\n---+---------\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# | value ")]),a._v("\n---+---------\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Octavia \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Bob \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Antonio \n---+---------\n")])])]),t("p",[a._v("Podemos também nomear nossas colunas ao invés de usar os nomes padrão:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" people.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" lines "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("column")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" | "')]),a._v(" first_name last_name job\n---+------------+-----------+----------\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# | first_name | last_name | job ")]),a._v("\n---+------------+-----------+----------\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Octavia    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Butler    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Writer \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Bob        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Ross      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Painter \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Antonio    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Vivaldi   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Composer \n---+------------+-----------+----------\n")])])]),t("p",[a._v("Agora que nossos dados estão em uma tabela, podemos usar todos os comandos que já usávamos antes em tabelas:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" people.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" lines "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("split")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("column")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('" | "')]),a._v(" first_name last_name job "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" sort-by first_name\n---+------------+-----------+----------\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# | first_name | last_name | job ")]),a._v("\n---+------------+-----------+----------\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Antonio    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Vivaldi   "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Composer \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Bob        "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Ross      "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Painter \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Octavia    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Butler    "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" Writer \n---+------------+-----------+----------\n")])])]),t("p",[a._v("Há outros comandos que você pode usar para trabalhar com strings:")]),a._v(" "),t("ul",[t("li",[a._v("str")]),a._v(" "),t("li",[a._v("lines")]),a._v(" "),t("li",[a._v("size")])]),a._v(" "),t("p",[a._v("Há também um conjunto de comandos auxiliares que podemos chamar se soubermos que os dados têm uma estrutura que o Nu deve ser capaz de entender. Por exemplo, vamos abrir um arquivo de lock do Rust:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" Cargo.lock\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# This file is automatically @generated by Cargo.")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# It is not intended for manual editing.")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("package"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nname "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"adhoc_derive"')]),a._v("\nversion "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.1.2"')]),a._v("\n")])])]),t("p",[a._v('O arquivo "Cargo.lock" é na verdade um arquivo .toml, mas a extensão do arquivo não é .toml. Tudo bem, podemos usar o comando '),t("code",[a._v("from toml")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" Cargo.lock "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" from toml\n----------+-------------\n metadata "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" package \n----------+-------------\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("object"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("405")]),a._v(" items"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n----------+-------------\n")])])]),t("p",[a._v("Há um comando "),t("code",[a._v("from")]),a._v(" para cada formato de dados estruturados em texto que o Nu entende e pode abrir.")]),a._v(" "),t("h2",{attrs:{id:"abrindo-no-modo-bruto"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abrindo-no-modo-bruto"}},[a._v("#")]),a._v(" Abrindo no modo bruto")]),a._v(" "),t("p",[a._v("Embora seja útil poder abrir um arquivo e trabalhar imediatamente com uma tabela dos seus dados, nem sempre é isso o que queremos fazer. Para ter acesso ao texto subjacente, o comando "),t("code",[a._v("open")]),a._v(" pode receber um modificador opcional "),t("code",[a._v("--raw")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" Cargo.toml --raw\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("package"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("                                                                                        name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nu"')]),a._v("\nversion "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.1.3"')]),a._v("\nauthors "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Yehuda Katz <wycats@gmail.com>"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Jonathan Turner <jonathan.d.turner@gmail.com>"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\ndescription "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"A shell for the GitHub era"')]),a._v("\nlicense "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"MIT"')]),a._v("\n")])])]),t("h2",{attrs:{id:"abrindo-urls"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abrindo-urls"}},[a._v("#")]),a._v(" Abrindo URLs")]),a._v(" "),t("p",[a._v("Além de carregar dados a partir do sistema de arquivos, você também pode passar uma URL para o comando "),t("code",[a._v("open")]),a._v(". Ele trará da internet o conteúdo dessa URL e o retornará para você:")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" https://www.jonathanturner.org/feed.xml\n----------\n rss \n----------\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" item"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n----------\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);