(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{631:function(s,a,t){"use strict";t.r(a);var e=t(44),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"skip-while"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#skip-while"}},[s._v("#")]),s._v(" skip-while")]),s._v(" "),t("p",[s._v("Skips rows while the condition matches.")]),s._v(" "),t("h2",{attrs:{id:"usage"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[s._v("#")]),s._v(" Usage")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("input-command"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" skip-while "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("condition"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])])]),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" Examples")]),s._v(" "),t("p",[s._v("If we open a file with a list of contacts, we get all of the contacts.")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" contacts.csv "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort-by "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last name"')]),s._v("\n───┬────────────┬───────────┬──────────────────\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# │ first name │ last name │ email")]),s._v("\n───┼────────────┼───────────┼──────────────────\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" │ John       │ Abbot     │ abbot@email.com\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │ Chris      │ Beasly    │ beasly@email.com\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" │ Jane       │ Carver    │ carver@email.com\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" │ Francis    │ Davis     │ davis@email.com\n───┴────────────┴───────────┴──────────────────\n")])])]),t("p",[s._v("To exclude skip contacts with last names starting with 'A' or 'B', use skip-while:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" contacts.csv "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" sort-by "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last name"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  skip-while "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last name"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v("\n───┬────────────┬───────────┬──────────────────\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# │ first name │ last name │ email")]),s._v("\n───┼────────────┼───────────┼──────────────────\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" │ Jane       │ Carver    │ carver@email.com\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │ Francis    │ Davis     │ davis@email.com\n───┴────────────┴───────────┴──────────────────\n")])])]),t("p",[s._v("Note that the order of input rows matters. Once a single row does not match the condition, all following rows are included in the output, whether or not they match the condition:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("open")]),s._v(" contacts.csv "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" skip-while "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last name"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v("\n───┬────────────┬───────────┬──────────────────\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# │ first name │ last name │ email")]),s._v("\n───┼────────────┼───────────┼──────────────────\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" │ Jane       │ Carver    │ carver@email.com\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │ Chris      │ Beasly    │ beasly@email.com\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" │ Francis    │ Davis     │ davis@email.com\n───┴────────────┴───────────┴──────────────────\n")])])]),t("p",[s._v("See the "),t("code",[s._v("where")]),s._v(" command to filter each individual row by a condition, regardless of order.")])])}),[],!1,null,null,null);a.default=n.exports}}]);