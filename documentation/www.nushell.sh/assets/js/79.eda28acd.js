(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{487:function(t,e,a){"use strict";a.r(e);var r=a(44),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Configuration management.")]),t._v(" "),a("p",[t._v("Syntax: "),a("code",[t._v("config {flags}")])]),t._v(" "),a("h2",{attrs:{id:"flags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flags"}},[t._v("#")]),t._v(" Flags")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("load <file path shape>\n  load the config from the path give\n\nset <any shape>\n  set a value in the config, eg) set variable value\n\nset_into <member shape>\n  sets a variable from values in the pipeline\n\nget <any shape>\n  get a value from the config\n\nremove <any shape>\n  remove a value from the config\n\nclear\n  clear the config\n\npath\n  return the path to the config file\n")])])]),a("h2",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Variable")]),t._v(" "),a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("path")]),t._v(" "),a("td",[t._v("table of strings")]),t._v(" "),a("td",[t._v("PATH to use to find binaries")])]),t._v(" "),a("tr",[a("td",[t._v("env")]),t._v(" "),a("td",[t._v("row")]),t._v(" "),a("td",[t._v("the environment variables to pass to external commands")])]),t._v(" "),a("tr",[a("td",[t._v("ctrlc_exit")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("whether or not to exit Nu after multiple ctrl-c presses")])]),t._v(" "),a("tr",[a("td",[t._v("table_mode")]),t._v(" "),a("td",[t._v('"light" or other')]),t._v(" "),a("td",[t._v("enable lightweight or normal tables")])]),t._v(" "),a("tr",[a("td",[t._v("edit_mode")]),t._v(" "),a("td",[t._v('"vi" or "emacs"')]),t._v(" "),a("td",[t._v('changes line editing to "vi" or "emacs" mode')])]),t._v(" "),a("tr",[a("td",[t._v("key_timeout")]),t._v(" "),a("td",[t._v("integer (milliseconds)")]),t._v(" "),a("td",[t._v("vi: the delay to wait for a longer key sequence after ESC")])]),t._v(" "),a("tr",[a("td",[t._v("history_size")]),t._v(" "),a("td",[t._v("integer")]),t._v(" "),a("td",[t._v("maximum entries that will be stored in history (100,000 default)")])]),t._v(" "),a("tr",[a("td",[t._v("completion_mode")]),t._v(" "),a("td",[t._v('"circular" or "list"')]),t._v(" "),a("td",[t._v('changes completion type to "circular" (default) or "list" mode')])]),t._v(" "),a("tr",[a("td",[t._v("complete_from_path")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("whether or not to complete names of binaries on PATH (default true)")])]),t._v(" "),a("tr",[a("td",[t._v("rm_always_trash")]),t._v(" "),a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("whether or not to always use system trash when no flags are given to "),a("code",[t._v("rm")])])]),t._v(" "),a("tr",[a("td",[t._v("pivot_mode")]),t._v(" "),a("td",[t._v('"auto" or "always" or "never"')]),t._v(" "),a("td",[t._v('"auto" will only pivot single row tables if the output is greater than the terminal width. "always" will always pivot single row tables. "never" will never pivot single row tables.')])]),t._v(" "),a("tr",[a("td",[t._v("plugin_dirs")]),t._v(" "),a("td",[t._v("table of strings")]),t._v(" "),a("td",[t._v("additional directories to search for plugins during startup")])])])]),t._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" table_mode "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"light"')]),t._v("\n")])])]),a("p",[t._v("A more detailed description on how to use this command to configure Nu shell can be found in the configuration chapter of "),a("a",{attrs:{href:"https://www.nushell.sh/book/en/configuration.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nu Book"),a("OutboundLink")],1),t._v(".")])])}),[],!1,null,null,null);e.default=o.exports}}]);