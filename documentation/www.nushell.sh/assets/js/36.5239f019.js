(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{440:function(e,t,r){"use strict";r.r(t);var n=r(44),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"nushell-0-20"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nushell-0-20"}},[e._v("#")]),e._v(" Nushell 0.20")]),e._v(" "),r("p",[e._v("Nushell, or Nu for short, is a new shell that takes a modern, structured approach to your commandline. It works seamlessly with the data from your filesystem, operating system, and a growing number of file formats to make it easy to build powerful commandline pipelines.")]),e._v(" "),r("p",[e._v("Today, we're releasing 0.20 of Nu. In this version, we're introducing some new features for working with rows, improvements to completions, and more.")]),e._v(" "),r("h1",{attrs:{id:"where-to-get-it"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#where-to-get-it"}},[e._v("#")]),e._v(" Where to get it")]),e._v(" "),r("p",[e._v("Nu 0.20 is available as "),r("a",{attrs:{href:"https://github.com/nushell/nushell/releases/tag/0.20.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("pre-built binaries"),r("OutboundLink")],1),e._v(" or from "),r("a",{attrs:{href:"https://crates.io/crates/nu",target:"_blank",rel:"noopener noreferrer"}},[e._v("crates.io"),r("OutboundLink")],1),e._v(". If you have Rust installed you can install it using "),r("code",[e._v("cargo install nu")]),e._v(".")]),e._v(" "),r("p",[e._v("If you want all the goodies, you can install "),r("code",[e._v("cargo install nu --features=extra")]),e._v(".")]),e._v(" "),r("p",[e._v("As part of this release, we also publish a set of plugins you can install and use with Nu. To install, use "),r("code",[e._v("cargo install nu_plugin_<plugin name>")]),e._v(".")]),e._v(" "),r("h1",{attrs:{id:"what-s-new"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-s-new"}},[e._v("#")]),e._v(" What's New")]),e._v(" "),r("h2",{attrs:{id:"new-functionality"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#new-functionality"}},[e._v("#")]),e._v(" New functionality")]),e._v(" "),r("h3",{attrs:{id:"each-group-and-each-window-ritobanrc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#each-group-and-each-window-ritobanrc"}},[e._v("#")]),e._v(" "),r("code",[e._v("each group")]),e._v(" and "),r("code",[e._v("each window")]),e._v(" (ritobanrc)")]),e._v(" "),r("p",[e._v("With 0.20, you can now work with groups of rows at a time easier than ever before.")]),e._v(" "),r("p",[e._v("For example, let's say you have a table like this:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("───┬───────┬─────\n # │ name  │ age\n───┼───────┼─────\n 0 │ Joe   │  30\n 1 │ Fred  │  40\n 2 │ Sally │  40\n 3 │ Sean  │  42\n 4 │ Gram  │  66\n 5 │ Todd  │   1\n───┴───────┴─────\n")])])]),r("p",[e._v("And you wanted to take three rows at a time, and sum the ages. You can now do this using:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("... | each group 3 { get age | math sum }\n───┬─────\n 0 │ 110\n 1 │ 109\n───┴─────\n")])])]),r("p",[e._v('Or, you can slide a "window" over the data, looking at multiple rows at a time. Let\'s slide a window of two rows, so that we look at each pair. We can use this to average the adjacent rows:')]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("... | each window 2 { get age | math avg }\n───┬─────────\n 0 │ 35.0000\n 1 │ 40.0000\n 2 │ 41.0000\n 3 │ 54.0000\n 4 │ 33.5000\n───┴─────────\n")])])]),r("h3",{attrs:{id:"completion-improvements-thegedge-rezural"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#completion-improvements-thegedge-rezural"}},[e._v("#")]),e._v(" Completion improvements (thegedge, rezural)")]),e._v(" "),r("p",[e._v("The new completer received a "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2497",target:"_blank",rel:"noopener noreferrer"}},[e._v("lot of bugfixes"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2503",target:"_blank",rel:"noopener noreferrer"}},[e._v("more fixes"),r("OutboundLink")],1),e._v(", and "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2525",target:"_blank",rel:"noopener noreferrer"}},[e._v("yet more fixes"),r("OutboundLink")],1),e._v(" since its initial release with 0.19. We're continuing to improve this experience further.")]),e._v(" "),r("p",[e._v("Completions can "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2556",target:"_blank",rel:"noopener noreferrer"}},[e._v("now be case-insensitive"),r("OutboundLink")],1),e._v(". This is especially useful for platforms where filepaths are case-insensitive.")]),e._v(" "),r("h2",{attrs:{id:"command-improvements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#command-improvements"}},[e._v("#")]),e._v(" Command Improvements")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("NEW")]),e._v(" "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2489",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("random integer")]),r("OutboundLink")],1),e._v(" - create random integers (smaydew)")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("NEW")]),e._v(" "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2495",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("exec")]),r("OutboundLink")],1),e._v(" - on Unix-based systems with exec support, you can now call the built-in "),r("code",[e._v("exec")]),e._v(" command (almindor)")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("NEW")]),e._v(" "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2505",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mod")]),r("OutboundLink")],1),e._v(" - a new modulo operator (jonathandturner)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("mv")]),e._v(" now uses the "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2487",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("fs_extra")]),e._v(" crate for better recursive moves"),r("OutboundLink")],1),e._v(" (almindor)")])]),e._v(" "),r("li",[r("p",[e._v("More table themes (fdncred)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("ls -l")]),e._v(" now also lists the "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2496",target:"_blank",rel:"noopener noreferrer"}},[e._v("number of links"),r("OutboundLink")],1),e._v(" (gillespiecd)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("str substring")]),e._v(" can now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2499",target:"_blank",rel:"noopener noreferrer"}},[e._v("optionally take a range"),r("OutboundLink")],1),e._v(" (defstryker)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("char")]),e._v(" gets support for "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2500",target:"_blank",rel:"noopener noreferrer"}},[e._v("weather characters"),r("OutboundLink")],1),e._v(" (fdncred)")])]),e._v(" "),r("li",[r("p",[e._v("Ranges can now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2506",target:"_blank",rel:"noopener noreferrer"}},[e._v("start or end with variables"),r("OutboundLink")],1),e._v(" and can have "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2509",target:"_blank",rel:"noopener noreferrer"}},[e._v("decimal numbers as boundaries"),r("OutboundLink")],1),e._v(" (jonathandturner)")])]),e._v(" "),r("li",[r("p",[e._v("Ranges can now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2541",target:"_blank",rel:"noopener noreferrer"}},[e._v("also be exclusive"),r("OutboundLink")],1),e._v(" using the "),r("code",[e._v("x..<y")]),e._v(" syntax (radekvit)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("ps -l")]),e._v(" now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2507",target:"_blank",rel:"noopener noreferrer"}},[e._v("shows cpu time"),r("OutboundLink")],1),e._v(" (gillespiecd)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("with-env")]),e._v(" can now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2526",target:"_blank",rel:"noopener noreferrer"}},[e._v("accept multiple variables"),r("OutboundLink")],1),e._v(" (itn3000)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("math avg")]),e._v(" will now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2529",target:"_blank",rel:"noopener noreferrer"}},[e._v("also work with durations"),r("OutboundLink")],1),e._v(" (gorogoroumaru)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("reduce")]),e._v(" can now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2529",target:"_blank",rel:"noopener noreferrer"}},[e._v("work with table values"),r("OutboundLink")],1),e._v(" (andrasio)")])]),e._v(" "),r("li",[r("p",[e._v("The active shell in "),r("code",[e._v("shells")]),e._v(" is "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2540",target:"_blank",rel:"noopener noreferrer"}},[e._v("now more clearly shown"),r("OutboundLink")],1),e._v(" (gillespiecd)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("sleep")]),e._v(" now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2550",target:"_blank",rel:"noopener noreferrer"}},[e._v("respects Ctrl+C"),r("OutboundLink")],1),e._v(" and can "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2558",target:"_blank",rel:"noopener noreferrer"}},[e._v("pass along the output"),r("OutboundLink")],1),e._v(" (radekvit)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("str trim")]),e._v(" and "),r("code",[e._v("trim")]),e._v(" are "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2576",target:"_blank",rel:"noopener noreferrer"}},[e._v("merged"),r("OutboundLink")],1),e._v(" (gillespiecd and radekvit)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("str find-replace")]),e._v(" can now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2569",target:"_blank",rel:"noopener noreferrer"}},[e._v("global search/replace"),r("OutboundLink")],1),e._v(" (fdncred)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("open")]),e._v(" now only streams for "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2570",target:"_blank",rel:"noopener noreferrer"}},[e._v("non-files and large files"),r("OutboundLink")],1),e._v(" (jonathandturner)")])]),e._v(" "),r("li",[r("p",[e._v("If supported on the platform, "),r("code",[e._v("benchmark")]),e._v(" now gives "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2571",target:"_blank",rel:"noopener noreferrer"}},[e._v("user/system/idle times as well"),r("OutboundLink")],1),e._v(" (radekvit)")])]),e._v(" "),r("li",[r("p",[e._v("Ctrl+D now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2583",target:"_blank",rel:"noopener noreferrer"}},[e._v("exits the current shell"),r("OutboundLink")],1),e._v(" (gillespiecd)")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("fetch")]),e._v(" now "),r("a",{attrs:{href:"https://github.com/nushell/nushell/pull/2587",target:"_blank",rel:"noopener noreferrer"}},[e._v("supports CSV MIME types"),r("OutboundLink")],1),e._v(" (notryanb)")])])]),e._v(" "),r("h2",{attrs:{id:"other-improvements-fdncred-gillespiecd-lidin-andrasio-radekvit-jonathandturner-coolshaurya"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#other-improvements-fdncred-gillespiecd-lidin-andrasio-radekvit-jonathandturner-coolshaurya"}},[e._v("#")]),e._v(" Other improvements (fdncred, gillespiecd, lidin, andrasio, radekvit, jonathandturner, coolshaurya)")]),e._v(" "),r("p",[e._v("Removed unnused dependencies, cleanups to duration, some ARM incompatibilites were fixed, some Ctrl+C issues were fixed, optimized some config reading, cleanup code in "),r("code",[e._v("get")]),e._v(" and "),r("code",[e._v("nu-value-ext")]),e._v(", rustyline was upgraded (fixing a common instability in Windows), "),r("code",[e._v("help command")]),e._v(" get some improvements, "),r("code",[e._v("random integer")]),e._v(" got some stability fixes.")]),e._v(" "),r("h1",{attrs:{id:"breaking-changes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#breaking-changes"}},[e._v("#")]),e._v(" Breaking changes")]),e._v(" "),r("h2",{attrs:{id:"in-and-not-in-are-now-in-and-not-in"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#in-and-not-in-are-now-in-and-not-in"}},[e._v("#")]),e._v(" "),r("code",[e._v("in:")]),e._v(" and "),r("code",[e._v("not-in:")]),e._v(" are now "),r("code",[e._v("in")]),e._v(" and "),r("code",[e._v("not-in")])]),e._v(" "),r("p",[e._v("In working with operators, we've removed the colon from the "),r("code",[e._v("in")]),e._v(" and "),r("code",[e._v("not-in")]),e._v(" operators.")]),e._v(" "),r("h2",{attrs:{id:"trim-and-str-trim-are-now-just-str-trim"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#trim-and-str-trim-are-now-just-str-trim"}},[e._v("#")]),e._v(" "),r("code",[e._v("trim")]),e._v(" and "),r("code",[e._v("str trim")]),e._v(" are now just "),r("code",[e._v("str trim")])]),e._v(" "),r("p",[e._v("We've merged the functionality and now just have the one "),r("code",[e._v("str trim")]),e._v(" command.")]),e._v(" "),r("h2",{attrs:{id:"locale-formatted-numbers-temporarily-not-supported"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#locale-formatted-numbers-temporarily-not-supported"}},[e._v("#")]),e._v(" Locale-formatted numbers temporarily not supported")]),e._v(" "),r("p",[e._v("As part of updating dependencies, we've had to temporarily disable locale-formatting numbers. We hope to fix this as dependencies update to the latest versions.")]),e._v(" "),r("h2",{attrs:{id:"change-in-config-location"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#change-in-config-location"}},[e._v("#")]),e._v(" Change in config location")]),e._v(" "),r("p",[e._v("We've tried to use a supported 'directories' crate, which has meant having to change until we found a supported one. This, unfortunately, means that this release moves the config location again.")]),e._v(" "),r("p",[e._v("On macOS, "),r("code",[e._v("config path")]),e._v(' now points to: "$HOME/Library/Application Support/org.nushell.nu/config.toml", in 0.19.0 and earlier it was: "$HOME/Library/Preferences/org.nushell.nu/config.toml".')]),e._v(" "),r("h1",{attrs:{id:"zulip-chat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#zulip-chat"}},[e._v("#")]),e._v(" Zulip chat")]),e._v(" "),r("p",[e._v("We're experimenting with using Zulip for our community chat and design discussions. If you want, you can "),r("a",{attrs:{href:"https://nushell.zulipchat.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("try the server and tell us what you think"),r("OutboundLink")],1),e._v(". If you'd rather we stick with "),r("a",{attrs:{href:"https://discord.gg/NtAbbGn",target:"_blank",rel:"noopener noreferrer"}},[e._v("Discord"),r("OutboundLink")],1),e._v(", you can tell us that, too 😃")]),e._v(" "),r("h1",{attrs:{id:"looking-forward"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#looking-forward"}},[e._v("#")]),e._v(" Looking forward")]),e._v(" "),r("p",[e._v("We've put a "),r("a",{attrs:{href:"https://docs.google.com/forms/d/e/1FAIpQLScEFzDh7j3jfAuVMBCQtQE-qfKAhugLCiUaaGL583QtGwz5fw/viewform?usp=sf_link",target:"_blank",rel:"noopener noreferrer"}},[e._v("survey to get feedback from you about Nushell"),r("OutboundLink")],1),e._v('. This will help us focus our efforts in the coming releases to refactor, trim, and polish Nu. Working with a large codebase is always a challenge, and recently we\'ve been thinking through what features really make up the "core" Nu experience and what parts can be moved outside of Nu itself. This may mean making more things plugins, cutting back on the depedencies we use, and more. Getting your feedback makes sure we have a clear picture for what the "core" of Nu is to most people.')]),e._v(" "),r("p",[e._v("Even if you're just curious about Nushell but aren't using it, we'd love to hear from you.")])])}),[],!1,null,null,null);t.default=a.exports}}]);