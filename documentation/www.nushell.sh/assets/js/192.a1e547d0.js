(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{596:function(t,a,e){"use strict";e.r(a);var s=e(44),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Explore and manipulate paths.")]),t._v(" "),e("p",[t._v("There are three ways to represent a path:")]),t._v(" "),e("ul",[e("li",[t._v("As a path literal, e.g., '/home/viking/spam.txt'")]),t._v(" "),e("li",[t._v("As a structured path: a table with 'parent', 'stem', and 'extension' (and")]),t._v(" "),e("li",[t._v("'prefix' on Windows) columns. This format is produced by the 'path parse'\nsubcommand.")]),t._v(" "),e("li",[t._v("As an inner list of path parts, e.g., '[[ / home viking spam.txt ]]'.\nSplitting into parts is done by the "),e("code",[t._v("path split")]),t._v(" command.")])]),t._v(" "),e("p",[t._v("All subcommands accept all three variants as an input. Furthermore, the 'path\njoin' subcommand can be used to join the structured path or path parts back into\nthe path literal.")]),t._v(" "),e("h2",{attrs:{id:"usage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subcommand"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("flags"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),e("h2",{attrs:{id:"subcommands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subcommands"}},[t._v("#")]),t._v(" Subcommands")]),t._v(" "),e("ul",[e("li",[t._v("path basename - Get the final component of a path")]),t._v(" "),e("li",[t._v("path dirname - Get the parent directory of a path")]),t._v(" "),e("li",[t._v("path exists - Check whether a path exists")]),t._v(" "),e("li",[t._v("path expand - Expand a path to its absolute form")]),t._v(" "),e("li",[t._v("path join - Join a structured path or a list of path parts.")]),t._v(" "),e("li",[t._v("path parse - Convert a path into structured data.")]),t._v(" "),e("li",[t._v("path relative-to - Get a path as relative to another path.")]),t._v(" "),e("li",[t._v("path split - Split a path into parts by a separator.")]),t._v(" "),e("li",[t._v("path type - Get the type of the object a path refers to (e.g., file, dir, symlink)")])]),t._v(" "),e("h2",{attrs:{id:"flags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flags"}},[t._v("#")]),t._v(" Flags")]),t._v(" "),e("ul",[e("li",[t._v("-h, --help: Display this help message")])])])}),[],!1,null,null,null);a.default=r.exports}}]);