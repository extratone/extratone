(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{525:function(t,e,a){"use strict";a.r(e);var s=a(44),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Converts toml data into table. Use this when nushell cannot determine the input file extension.")]),t._v(" "),a("h2",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),a("p",[t._v("Let's say we have the following Rust .lock file:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" Cargo.lock\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This file is automatically @generated by Cargo.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# It is not intended for manual editing.                                   [[package]]                                                                name = "adler32"                                                           version = "1.0.3"                                                          source = "registry+https://github.com/rust-lang/crates.io-index"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("p",[t._v("The \"Cargo.lock\" file is actually a .toml file, but the file extension isn't .toml. That's okay, we can use the "),a("code",[t._v("from toml")]),t._v(" command:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),t._v(" Cargo.lock "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" from toml\n─────────┬──────────────────\n package │ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("table "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("459")]),t._v(" rows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n─────────┴──────────────────\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);