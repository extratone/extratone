(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{697:function(s,a,t){"use strict";t.r(a);var n=t(44),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("Finds a program file.")]),s._v(" "),t("p",[s._v("Usage:")]),s._v(" "),t("blockquote",[t("p",[s._v("which "),t("application",[s._v(" {flags}")])],1)]),s._v(" "),t("h2",{attrs:{id:"parameters"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[s._v("#")]),s._v(" Parameters")]),s._v(" "),t("ul",[t("li",[s._v("application: the name of the command to find the path to")])]),s._v(" "),t("h2",{attrs:{id:"flags"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flags"}},[s._v("#")]),s._v(" Flags")]),s._v(" "),t("ul",[t("li",[s._v("--all: list all executables")])]),s._v(" "),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" Examples")]),s._v(" "),t("p",[t("code",[s._v("which")]),s._v(" finds the location of an executable:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" python\n─────────┬─────────────────\n arg     │ python\n path    │ /usr/bin/python\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("builtin")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n─────────┴─────────────────\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" cargo\n─────────┬────────────────────────────\n arg     │ cargo\n path    │ /home/bob/.cargo/bin/cargo\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("builtin")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n─────────┴────────────────────────────\n")])])]),t("p",[t("code",[s._v("which")]),s._v(" will identify nushell commands:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n─────────┬──────────────────────────\n arg     │ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n path    │ nushell built-in "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("builtin")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n─────────┴──────────────────────────\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v("\n─────────┬──────────────────────────\n arg     │ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v("\n path    │ nushell built-in "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("builtin")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n─────────┴──────────────────────────\n")])])]),t("p",[s._v("Passing the "),t("code",[s._v("all")]),s._v(" flag identifies all instances of a command or binary")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" --all\n───┬─────┬──────────────────────────┬─────────\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# │ arg │ path                     │ builtin")]),s._v("\n───┼─────┼──────────────────────────┼─────────\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("  │ nushell built-in "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("  │ /bin/ls                  │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n───┴─────┴──────────────────────────┴─────────\n")])])]),t("p",[t("code",[s._v("which")]),s._v(" will also identify local binaries")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" foo\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x foo\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" ./foo\n─────────┬────────────────────────────────\n arg     │ ./foo\n path    │ /Users/josephlyons/Desktop/foo\n "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("builtin")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n─────────┴────────────────────────────────\n")])])]),t("p",[t("code",[s._v("which")]),s._v(" also identifies aliases")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" e "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" e\n───┬─────┬───────────────┬─────────\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# │ arg │     path      │ builtin")]),s._v("\n───┼─────┼───────────────┼─────────\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" │ e   │ Nushell "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n───┴─────┴───────────────┴─────────\n")])])]),t("p",[s._v("and custom commands")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" def my_cool_echo "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$arg")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" my_cool_echo\n───┬──────────────┬────────────────────────┬─────────\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# │     arg      │          path          │ builtin")]),s._v("\n───┼──────────────┼────────────────────────┼─────────\n "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" │ my_cool_echo │ Nushell custom "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" │ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n───┴──────────────┴────────────────────────┴─────────\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);