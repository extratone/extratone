(window.webpackJsonp=window.webpackJsonp||[]).push([[405],{811:function(o,e,a){"use strict";a.r(e);var s=a(44),r=Object(s.a)({},(function(){var o=this,e=o.$createElement,a=o._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[a("h1",{attrs:{id:"comandos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comandos"}},[o._v("#")]),o._v(" Comandos")]),o._v(" "),a("p",[o._v("Comandos são os blocos de construção para pipelines em Nu. Eles fazem a ação do pipeline, seja criando dados, mudando dados que fluem de entradas para saídas, ou visualizar dados assim que estes saem do pipeline. Existem dois tipos de comandos: comandos internos, que são comandos feitos para executar dentro do Nu, e comandos externos, que são externos ao Nu e se comunicam com o padrão Unix "),a("code",[o._v("stdin")]),o._v("/"),a("code",[o._v("stdout")]),o._v(".")]),o._v(" "),a("h2",{attrs:{id:"comandos-internos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comandos-internos"}},[o._v("#")]),o._v(" Comandos internos")]),o._v(" "),a("p",[o._v("Todos os comandos dentro do Nu, incluindo plugins, são comandos internos. Comandos internos se comunicam usando streams dos tipos "),a("a",{attrs:{href:"https://github.com/nushell/nushell/blob/d30c40b40ebfbb411a503ad7c7bceae8029c6689/crates/nu-source/src/meta.rs#L91",target:"_blank",rel:"noopener noreferrer"}},[a("code",[o._v("Tagged<Value>")]),a("OutboundLink")],1),o._v(" e "),a("a",{attrs:{href:"https://github.com/nushell/nushell/blob/main/crates/nu-errors/src/lib.rs#L179",target:"_blank",rel:"noopener noreferrer"}},[o._v("ShellError"),a("OutboundLink")],1)]),o._v(" "),a("h3",{attrs:{id:"signature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[o._v("#")]),o._v(" Signature")]),o._v(" "),a("p",[o._v("Comandos usam uma checagem de tipo simples para garantir que os argumentos passados possam ser lidados corretamente. Para permitir isso, cada comando oferece uma Signature que informa o Nu:")]),o._v(" "),a("ul",[a("li",[o._v("O nome do comando")]),o._v(" "),a("li",[o._v("Os argumentos posicionauis (eg, em "),a("code",[o._v("start x y")]),o._v(" o "),a("code",[o._v("x")]),o._v(" e o "),a("code",[o._v("y")]),o._v("são argumentos posicionais)")]),o._v(" "),a("li",[o._v("Se o comando recebe um número irrestrito de argumentos posicionais adicionais (eg, "),a("code",[o._v("start a1 a2 a3 ... a99 a100")]),o._v(")")]),o._v(" "),a("li",[o._v("Os argumentos nomeados (eg, "),a("code",[o._v("start --now")]),o._v(")")]),o._v(" "),a("li",[o._v("Se o comando é um filtro ou a saída")])]),o._v(" "),a("p",[o._v("Com essa informação, um pipeline pode verificar problemas potenciais antes de ser executado.")]),o._v(" "),a("h2",{attrs:{id:"comandos-externos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comandos-externos"}},[o._v("#")]),o._v(" Comandos externos")]),o._v(" "),a("p",[o._v("Um comando externo é qualquer comando que não é parte dos comandos imbutidos no Nu ou em seus plugins. Se um comando desconhecido pelo Nu é chamado, o sistema subjacente vai ser chamado com os argumentos fornecidos em uma tentativa de invocar esse comando como um programa externo.")]),o._v(" "),a("h2",{attrs:{id:"comunicacao-entre-comandos-externos-e-internos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#comunicacao-entre-comandos-externos-e-internos"}},[o._v("#")]),o._v(" Comunicação entre comandos externos e internos")]),o._v(" "),a("h3",{attrs:{id:"interno-para-interno"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interno-para-interno"}},[o._v("#")]),o._v(" Interno para interno")]),o._v(" "),a("p",[o._v("Comandos internos se comunicam usando o valor completo da stream que o Nu fornece, que incluí todos os tipos de arquivos embutidos. Isso incluí a comunicação entre comandos internos e plugins (em ambas as direções).")]),o._v(" "),a("h3",{attrs:{id:"interno-para-externo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interno-para-externo"}},[o._v("#")]),o._v(" Interno para externo")]),o._v(" "),a("p",[o._v("Comandos internos que enviam texto para comandos externos precisam ter texto (strings) preparados antes do tempo. Se um objeto é enviado diretamente para um comando externo, isso é considerado um erro já que não é possível inferir de que maneira os dados estruturados devem ser representados para o comando externo. É esperado que o usuário. O usuário deve limitar-se a uma célula de dados simples ou usar um dos conversores de tipo de arquivo (como "),a("code",[o._v("to-json")]),o._v(") para converter a tabela em uma representação de string.\nO comando externo é aberto para que seu "),a("code",[o._v("stdin")]),o._v(" seja redirecionado, para que os dados possam ser enviados a ele.")]),o._v(" "),a("h3",{attrs:{id:"externo-para-interno"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#externo-para-interno"}},[o._v("#")]),o._v(" Externo para interno")]),o._v(" "),a("p",[o._v("Comandos internos enviam uma série de strings pelo seu "),a("code",[o._v("stdout")]),o._v(". Essas strings são lidas no pipeline e são disponibilizadas para o comando interno seguinte no pipeline, ou expostas para o usuário se o comando externo for o último passo do pipeline.")]),o._v(" "),a("h3",{attrs:{id:"externo-para-externo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#externo-para-externo"}},[o._v("#")]),o._v(" Externo para externo")]),o._v(" "),a("p",[o._v("Comandos externos se comunicam através do "),a("code",[o._v("stdin")]),o._v("/"),a("code",[o._v("stdout")]),o._v(". Quando o Nu detectar essa situação, vai redirecionar o "),a("code",[o._v("stdout")]),o._v(" do primeiro comando para o "),a("code",[o._v("stdin")]),o._v(" do comando externo seguinte. Dessa forma, o comportamento esperado do pipeline do shell entre comandos externos é mantido.")])])}),[],!1,null,null,null);e.default=r.exports}}]);