(window.webpackJsonp=window.webpackJsonp||[]).push([[399],{805:function(a,o,e){"use strict";e.r(o);var s=e(44),t=Object(s.a)({},(function(){var a=this,o=a.$createElement,e=a._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"o-pipeline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#o-pipeline"}},[a._v("#")]),a._v(" O pipeline")]),a._v(" "),e("p",[a._v("Um dos principais designs do Nu é o pipeline, uma ideia de design que tem suas raízes décadas atrás, na filosofia original por trás do Unix. Assim como Nu se extende a partir do tipo de dado string do Unix, também extende a ideia do pipeline para incluir mais do que apenas texto.")]),a._v(" "),e("h2",{attrs:{id:"basico"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basico"}},[a._v("#")]),a._v(" Básico")]),a._v(" "),e("p",[a._v("Um pipeline é construído com três partes: a entrada, o filtro e a saída.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Cargo.toml"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" inc package.version "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" save "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Cargo_new.toml"')]),a._v("\n")])])]),e("p",[a._v("O primeiro comando, "),e("code",[a._v('open "Cargo.toml"')]),a._v(', é uma entrada (às vezes também chamado de "fonte" ou "produtor"). Ele cria ou carrega dados com os quais alimenta o pipeline. É a partir da entrada que os pipelines conseguem dados para trabalhar. Comandos como '),e("code",[a._v("ls")]),a._v(" também são entradas, já que pegam dados do sistema de arquivos e os enviam através dos pipelines para que possam ser usados adiante.")]),a._v(" "),e("p",[a._v("O segundo comando, "),e("code",[a._v("inc package.version")]),a._v(", é um filtro. Filtros recebem dados e normalmente fazem alguma coisa com eles. Podem mudá-los (como o comando "),e("code",[a._v("inc")]),a._v(" no nosso exemplo), ou podem executar outra operação, como registro de log, conforme os valores passam.")]),a._v(" "),e("p",[a._v("O último comando, "),e("code",[a._v('save "Cargo_new.toml"')]),a._v(', é uma saída (às vezes chamado de "pia" ou "ralo"). Uma saída recebe dados do pipeline e executa alguma operação final sobre eles. No nosso exemplo, salvamos o que chega pelo pipeline em um arquivo como passo final. Outros tipos de comandos de saída podem exibir os dados para o usuário.')]),a._v(" "),e("h2",{attrs:{id:"trabalhando-com-comandos-externos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trabalhando-com-comandos-externos"}},[a._v("#")]),a._v(" Trabalhando com comandos externos")]),a._v(" "),e("p",[a._v("Os comandos do Nu se comunicam entre si usando tipos de dados fornecidos pelo próprio Nu (veja "),e("RouterLink",{attrs:{to:"/pt-BR/book/tipos_de_dados.html"}},[a._v("tipos de dados")]),a._v("), mas e os comandos de fora do Nu? Vejamos alguns exemplos de como trabalhar com comandos externos:")],1),a._v(" "),e("p",[e("code",[a._v("comando_interno | comando_externo")])]),a._v(" "),e("p",[a._v("Dados fluem do comando_interno para o comando_externo. Espera-se que esses dados sejam strings, para que possam ser enviados para a entrada padrão ("),e("code",[a._v("stdin")]),a._v(") do comando_externo.")]),a._v(" "),e("p",[e("code",[a._v("comando_externo | comando_interno")])]),a._v(" "),e("p",[a._v("Dados vindo de um comando externo para o Nu são agrupados em uma string única e, então, passados para o comando_interno. Comandos como "),e("code",[a._v("lines")]),a._v(" ajudam a trazer dados de comandos externos de modo a facilitar sua utilização.")]),a._v(" "),e("p",[e("code",[a._v("comando_externo_1 | comando_externo_2")])]),a._v(" "),e("p",[a._v("Nu trabalha com dados canalizados entre dois comandos externos da mesma maneira que em outros shells, como Bash. A saída padrão ("),e("code",[a._v("stdout")]),a._v(") do comando_externo_1 é conectada à entrada padrão ("),e("code",[a._v("stdin")]),a._v(") do comando_externo_2, permitindo que os dados fluam naturalmente entre os dois comandos.")]),a._v(" "),e("h2",{attrs:{id:"nos-bastidores"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nos-bastidores"}},[a._v("#")]),a._v(" Nos bastidores")]),a._v(" "),e("p",[a._v("Você pode ter se perguntado como vemos uma tabela se o "),e("code",[a._v("ls")]),a._v(" é uma entrada e não uma saída. Nu adiciona automaticamente por nós uma saída usando outro comando chamado "),e("code",[a._v("autoview")]),a._v(", que é adicionado a qualquer pipeline que não tenha uma saída que nos permita ver o resultado.")]),a._v(" "),e("p",[a._v("Com efeito, o comando:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),e("p",[a._v("E o pipeline:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" autoview\n")])])]),e("p",[a._v("São a mesma coisa.")])])}),[],!1,null,null,null);o.default=t.exports}}]);