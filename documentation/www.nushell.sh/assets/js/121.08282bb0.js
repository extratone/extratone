(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{526:function(e,s,t){"use strict";t.r(s);var a=t(44),n=Object(a.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("Parse text as "),t("code",[e._v(".tsv")]),e._v(" and create table.")]),e._v(" "),t("p",[e._v("Syntax: "),t("code",[e._v("from tsv {flags}")])]),e._v(" "),t("h2",{attrs:{id:"flags"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flags"}},[e._v("#")]),e._v(" Flags")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("--headerless\n  don't treat the first row as column names\n")])])]),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),t("p",[e._v("Let's say we have the following file which is formatted like a "),t("code",[e._v("tsv")]),e._v(" file:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" elements.txt\nSymbol        Element\nH        Hydrogen\nHe        Helium\nLi        Lithium\nBe        Beryllium\n")])])]),t("p",[e._v("If we pass the output of the "),t("code",[e._v("open")]),e._v(" command to "),t("code",[e._v("from tsv")]),e._v(" we get a correct formatted table:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" elements.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" from tsv\n━━━┯━━━━━━━━┯━━━━━━━━━━━\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# │ Symbol │ Element")]),e._v("\n───┼────────┼───────────\n "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" │ H      │ Hydrogen\n "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" │ He     │ Helium\n "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" │ Li     │ Lithium\n "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" │ Be     │ Beryllium\n━━━┷━━━━━━━━┷━━━━━━━━━━━\n")])])]),t("p",[e._v("Using the "),t("code",[e._v("--headerless")]),e._v(" flag has the following output:")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("open")]),e._v(" elements.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" from tsv --headerless\n━━━━┯━━━━━━━━━┯━━━━━━━━━━━\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("#  │ Column1 │ Column2")]),e._v("\n────┼─────────┼───────────\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(" │ Symbol  │ Element\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" │ H       │ Hydrogen\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" │ He      │ Helium\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" │ Li      │ Lithium\n  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4")]),e._v(" │ Be      │ Beryllium\n━━━━┷━━━━━━━━━┷━━━━━━━━━━━\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);