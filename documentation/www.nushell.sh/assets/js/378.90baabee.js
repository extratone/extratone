(window.webpackJsonp=window.webpackJsonp||[]).push([[378],{784:function(a,t,e){"use strict";e.r(t);var v=e(44),s=Object(v.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"math"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#math"}},[a._v("#")]),a._v(" Math")]),a._v(" "),e("p",[a._v("何かの作業をしているとき、いくつかの数字を足し算したくなるときがあります。Nuには基本的な数学演算が用意されています。")]),a._v(" "),e("p",[a._v('"math mode"にするには、コマンドの先頭に'),e("code",[a._v("=")]),a._v("をつけます。これにより演算子を使用するコマンドを書くことができます。"),e("code",[a._v("where")]),a._v("コマンドのように自動でおこなってくれるコマンドもあります。")]),a._v(" "),e("h2",{attrs:{id:"四則演算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四則演算"}},[a._v("#")]),a._v(" 四則演算")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> = 1 + 3\n4\n")])])]),e("p",[a._v("Nuでは足し算、引き算、掛け算、割り算をそれぞれ"),e("code",[a._v("+")]),a._v(","),e("code",[a._v("-")]),a._v(","),e("code",[a._v("*")]),a._v("そして"),e("code",[a._v("/")]),a._v("演算子でおこなうことができます。演算子の優先順位が考慮されるので"),e("code",[a._v("1 + 2 * 3")]),a._v("は"),e("code",[a._v("1 + (2 * 3)")]),a._v("として扱われます。")]),a._v(" "),e("h2",{attrs:{id:"括弧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#括弧"}},[a._v("#")]),a._v(" 括弧")]),a._v(" "),e("p",[a._v("math modeでは括弧を利用して数式をグループ化できます。これにより足し算を優先したいときは"),e("code",[a._v("(1 + 2) * 3")]),a._v("と書くことができます。")]),a._v(" "),e("h2",{attrs:{id:"inとnot-in"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#inとnot-in"}},[a._v("#")]),a._v(" "),e("code",[a._v("in")]),a._v("と"),e("code",[a._v("not-in")])]),a._v(" "),e("p",[e("code",[a._v("in")]),a._v("と"),e("code",[a._v("not-in")]),a._v("演算子を使って、値が集合に含まれるかどうかを調べることができます。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> = 1 in [1 2 3]\ntrue\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("> = 1 not-in [1 2 3]\nfalse\n")])])]),e("h2",{attrs:{id:"と"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#と"}},[a._v("#")]),a._v(" "),e("code",[a._v("=~")]),a._v("と"),e("code",[a._v("!~")])]),a._v(" "),e("p",[e("code",[a._v("=~")]),a._v("と"),e("code",[a._v("!~")]),a._v("演算子を使って文字列が他の文字列の中にあるかどうかを調べることができます。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('> = "foobar" =~ "foo"\ntrue\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('> = "foobar" !~ "baz"\ntrue\n')])])]),e("h2",{attrs:{id:"比較演算子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比較演算子"}},[a._v("#")]),a._v(" 比較演算子")]),a._v(" "),e("p",[a._v("以下の比較演算子が利用可能です。")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("<")]),a._v(" - less than")]),a._v(" "),e("li",[e("code",[a._v("<=")]),a._v(" - less than or equal to")]),a._v(" "),e("li",[e("code",[a._v(">")]),a._v(" - greater than")]),a._v(" "),e("li",[e("code",[a._v(">=")]),a._v(" - greater than or equal to")]),a._v(" "),e("li",[e("code",[a._v("==")]),a._v(" - equal to")]),a._v(" "),e("li",[e("code",[a._v("!=")]),a._v(" - not equal to")])]),a._v(" "),e("h2",{attrs:{id:"複合演算子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#複合演算子"}},[a._v("#")]),a._v(" 複合演算子")]),a._v(" "),e("p",[e("code",[a._v("&&")]),a._v("と"),e("code",[a._v("||")]),a._v("を使ってブーリアンを返す２つの操作を結合できます。例えば: "),e("code",[a._v('ls | where name in ["one" "two" "three"] && size > 10kb')])])])}),[],!1,null,null,null);t.default=s.exports}}]);