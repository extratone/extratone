(window.webpackJsonp=window.webpackJsonp||[]).push([[154],{558:function(s,t,a){"use strict";a.r(t);var e=a(44),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("This command takes a string from a pipeline as input, and returns a table where each line of the input string is a row in the table. Empty lines are ignored. This command is capable of feeding other commands, such as "),a("code",[s._v("nth")]),s._v(", with its output.")]),s._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[s._v("#")]),s._v(" Usage")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("input-command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" lines\n")])])]),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" Examples")]),s._v(" "),a("p",[s._v("Basic usage:")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("World!"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('Love, nushell."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" lines\n━━━┯━━━━━━━━━━━━━━━━\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# │ value")]),s._v("\n───┼────────────────\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" │ Hello\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" │ World"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" │ Love, nushell.\n━━━┷━━━━━━━━━━━━━━━━\n")])])]),a("p",[s._v("One useful application is piping the contents of file into "),a("code",[s._v("lines")]),s._v(". This example extracts a certain line from a given file.")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" lines.md "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" lines "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" nth "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Examples")]),s._v("\n")])])]),a("p",[s._v("Similarly to this example, "),a("code",[s._v("lines")]),s._v(" can be used to extract certain portions of or apply transformations to data returned by any program which returns a string.")])])}),[],!1,null,null,null);t.default=n.exports}}]);