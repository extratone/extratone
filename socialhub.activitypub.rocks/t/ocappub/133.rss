<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>OcapPub</title>
    <link>https://socialhub.activitypub.rocks/t/ocappub/133</link>
    <description>**OcapPub: Towards networks of consent**

[Read the whitepaper](https://gitlab.com/spritely/ocappub/blob/master/README.org)

[ **ActivityPub Conference** ](https://redaktor.me/apconf/) Unconf Session
*find a read.only backup of the [ **#OcapPub etherpad** ](https://redaktor.me/pad/p/ocappub) here :*

[[ Notes starting 14:14 ]]

Adding friction:
- maybe spam-assasin bayesian stuff
- some secretary that&#39;s forwarding the message
- maybe attach two stamps


- Make VERY explicit when given permission
- example: &quot;disabling comments for a post&quot;

**Q:** Whats the main problem ?
A: Harrasment panic at mastodon devs:
    blacklist, whitelist, whackamole, ... it&#39;s soo cheap to generate users, sockpuppet accounts
    is becamejust as easy to spawn servers as it is to spawn users
    NETWORK DEFEDERATES VERY FAST
    --&gt; Identity-centric approach is the problem

OCAP:
&quot;Associating with identity it came from&quot;
First interaction is high friction, then it turns into a low friction, based on giving out OCAP.

&quot;SOUL&quot;(?) Abstraction:
- forward to a more powerful object

SharedInbox is awful!
History:
- mastodon needed bulk send messages for scaling
- single message to server instead of to all users of server individually
- mistake: the receiving server is deciding who to forward it to,which BREAKs the actor model
- that&#39;s where we need OCAP

&quot;Too much detail in this discussion&quot;...

- OCAP in Mastodon/Pleroma basically means &quot;abandon shared inbox&quot;
- OCAP is NOT a new standard it&#39;s a new methodolgy

- the hybrid systems are vulnerable in composition and they only improve it one level deep
- polaris et al subdivide the authority one level, with OCAP, one mechanism takes you all the way

- Distinction between multi-box and shared-inbox
- OCAP is very very new to many people here (like learned about its existence TODAY)
- currently compatible with existing infrastructure


- Limits of OCAP?
	- Can boosting be limited?
	- Answer: yes and no :)

- Problems with OCAP:
     - they expose very clearly the problems of existing systems
     - webfinger is dead
     - ocap makes delegation easy

- &quot;why we want this&quot; --&gt; if we go OCAP, we can reduce the power of the server
- what are the alternatives?

- Adrian: real use case &quot;healthcare&quot; where this one can be applied directly


Wrap up messages and take aways:
    - we need a way to continue this discussion
    - users need to be able to understand it without having to understanding the ocap model first
    - users ask &quot;where is the extra security&quot;
    - concepts are easier to explain with an implementation
    - show how easy it is with code
    - seems like there is agreement on the problem
    - ocapub seems like a terrible name
    - we need guided demonstrations
    - what do we get *ontop* of the friction of inbox case

---


See also
[ &quot;ActivityPub: past, present, **future**&quot; - Keynote by Christopher Lemmer Webber](https://youtu.be/Tgq0lqZ1Mvw?t=1325)</description>
    
    <lastBuildDate>Sun, 13 Oct 2019 14:50:59 +0000</lastBuildDate>
    <category>ActivityPub</category>
    <atom:link href="https://socialhub.activitypub.rocks/t/ocappub/133.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>OcapPub</title>
        <dc:creator><![CDATA[Sebastian]]></dc:creator>
        <description><![CDATA[
            <p><strong>OcapPub: Towards networks of consent</strong></p>
<p><a href="https://gitlab.com/spritely/ocappub/blob/master/README.org" rel="nofollow noopener">Read the whitepaper</a></p>
<p><a href="https://redaktor.me/apconf/" rel="nofollow noopener"> <strong>ActivityPub Conference</strong> </a> Unconf Session<br>
<em>find a read.only backup of the <a href="https://redaktor.me/pad/p/ocappub" rel="nofollow noopener"> <strong>#OcapPub etherpad</strong> </a> here :</em></p>
<p>[[ Notes starting 14:14 ]]</p>
<p>Adding friction:</p>
<ul>
<li>
<p>maybe spam-assasin bayesian stuff</p>
</li>
<li>
<p>some secretary that’s forwarding the message</p>
</li>
<li>
<p>maybe attach two stamps</p>
</li>
<li>
<p>Make VERY explicit when given permission</p>
</li>
<li>
<p>example: “disabling comments for a post”</p>
</li>
</ul>
<p><strong>Q:</strong> Whats the main problem ?<br>
A: Harrasment panic at mastodon devs:<br>
blacklist, whitelist, whackamole, … it’s soo cheap to generate users, sockpuppet accounts<br>
is becamejust as easy to spawn servers as it is to spawn users<br>
NETWORK DEFEDERATES VERY FAST<br>
–&gt; Identity-centric approach is the problem</p>
<p>OCAP:<br>
“Associating with identity it came from”<br>
First interaction is high friction, then it turns into a low friction, based on giving out OCAP.</p>
<p>“SOUL”(?) Abstraction:</p>
<ul>
<li>forward to a more powerful object</li>
</ul>
<p>SharedInbox is awful!<br>
History:</p>
<ul>
<li>mastodon needed bulk send messages for scaling</li>
<li>single message to server instead of to all users of server individually</li>
<li>mistake: the receiving server is deciding who to forward it to,which BREAKs the actor model</li>
<li>that’s where we need OCAP</li>
</ul>
<p>“Too much detail in this discussion”…</p>
<ul>
<li>
<p>OCAP in Mastodon/Pleroma basically means “abandon shared inbox”</p>
</li>
<li>
<p>OCAP is NOT a new standard it’s a new methodolgy</p>
</li>
<li>
<p>the hybrid systems are vulnerable in composition and they only improve it one level deep</p>
</li>
<li>
<p>polaris et al subdivide the authority one level, with OCAP, one mechanism takes you all the way</p>
</li>
<li>
<p>Distinction between multi-box and shared-inbox</p>
</li>
<li>
<p>OCAP is very very new to many people here (like learned about its existence TODAY)</p>
</li>
<li>
<p>currently compatible with existing infrastructure</p>
</li>
<li>
<p>Limits of OCAP?</p>
<ul>
<li>Can boosting be limited?</li>
<li>Answer: yes and no <img src="https://socialhub.activitypub.rocks/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:">
</li>
</ul>
</li>
<li>
<p>Problems with OCAP:</p>
<ul>
<li>they expose very clearly the problems of existing systems</li>
<li>webfinger is dead</li>
<li>ocap makes delegation easy</li>
</ul>
</li>
<li>
<p>“why we want this” --&gt; if we go OCAP, we can reduce the power of the server</p>
</li>
<li>
<p>what are the alternatives?</p>
</li>
<li>
<p>Adrian: real use case “healthcare” where this one can be applied directly</p>
</li>
</ul>
<p>Wrap up messages and take aways:<br>
- we need a way to continue this discussion<br>
- users need to be able to understand it without having to understanding the ocap model first<br>
- users ask “where is the extra security”<br>
- concepts are easier to explain with an implementation<br>
- show how easy it is with code<br>
- seems like there is agreement on the problem<br>
- ocapub seems like a terrible name<br>
- we need guided demonstrations<br>
- what do we get <em>ontop</em> of the friction of inbox case</p>
<hr>
<p>See also<br>
<a href="https://youtu.be/Tgq0lqZ1Mvw?t=1325" rel="nofollow noopener"> “ActivityPub: past, present, <strong>future</strong>” - Keynote by Christopher Lemmer Webber</a></p>
          <p><a href="https://socialhub.activitypub.rocks/t/ocappub/133/1">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/ocappub/133/1</link>
        <pubDate>Sun, 13 Oct 2019 13:29:04 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-133-1</guid>
        <source url="https://socialhub.activitypub.rocks/t/ocappub/133.rss">OcapPub</source>
      </item>
  </channel>
</rss>
