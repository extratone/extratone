<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>TerminusDB: Exciting stuff for fediverse projects</title>
    <link>https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736</link>
    <description>I have been actively reading up on a very interesting database product I came across, which - with its linked data support - is very interesting to fediverse impls. Copying from [earlier posts](https://forum.solidproject.org/t/terminusdb-a-delightful-database-for-linked-data/3140) on Solid forum:

---

I recently started [delightful](https://codeberg.org/teaserbot-labs/delightful) project, and - while adding a bunch of graph db&#39;s to [delightful-databases](https://codeberg.org/yarmo/delightful-databases/src/branch/master/README.md) - bumped into TerminusDB.

I think this is a _very_ interesting project for those working with linked data. I won&#39;t duplicate its features here but give you the link:

https://terminusdb.com/

If you found that interesting then you should really read the recent Hacker News discussion where the team gives lotsa background and answers a whole bunch of questions (such as why didn&#39;t you implement SPARQL querying?):

https://news.ycombinator.com/item?id=22867767

Some small feature summary might be in order, to demonstrate why I find this so exciting:

- The [db schema](https://terminusdb.com/docs/schema) is defined in OWL (used in a closed-world perspective)
- Most operation occurs in-memory, but is persisted in a forward-only log (similar to git)
- This &quot;git-for-data&quot; approach allows branch, merge, squash, rollback, diff, blame, and time-travel, etc.
- JSON-LD is interchange format, suitable for web, but editing in turtle is possible
- You can query any part of a graph and retrieve as a JSON-LD document (serialized to the depth you want)
- Query format is also JSON-LD, making queries composable and you can store/query queries like normal data
- Client-side the queries are created using fluent JS (for web devs) and/or Ruby (for data scientists)
- Provides transaction processing and updates using immutable database data structures
- Through this immutability the db regains full ACID support

The feature &quot;AI code generation&quot; is confusing but means:

&gt; We generate data-input forms automatically from the structure of schema definitions in the database - the same definitions which make it possible to marshall data from JSON-LD documents into a graph and back.

About the persistence of data:

&gt; The database is in memory but we journal all transactions to disk, so it is persistent. In fact it&#39;s so persistent that it never goes away. We have an append-only storage approach allowing you to do time-travel. You can query past versions, or look at differences, or even branch from a previous version of the database.

The canary release of TerminusDB 2.0 was just unveiled in this video: https://invidio.us/watch?v=jX4DMGgfr5M
It allows branching, merging of db&#39;s and cool stuff like time travel.</description>
    
    <lastBuildDate>Wed, 03 Feb 2021 19:20:10 +0000</lastBuildDate>
    <category>Fediversity</category>
    <atom:link href="https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>TerminusDB: Exciting stuff for fediverse projects</title>
        <dc:creator><![CDATA[aschrijver]]></dc:creator>
        <description><![CDATA[
            <p>Since I posted this, TerminusDB has launched TerminusHub. You can compare this to a Github, not for code, but for sharing Linked Data DB’s with collaborators.</p>
<h1><a href="https://terminusdb.com/hub/">Terminus Hub</a></h1>
<p>From the docs:</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://socialhub.activitypub.rocks/uploads/default/original/1X/2dac6275ae61bd6cc5fd7e5443b88d4780a7e40f.png" class="site-icon" width="32" height="32">
      <a href="https://terminusdb.com/docs/tutorials/share-tutorial/" target="_blank" rel="noopener">TerminusDB Documentation</a>
  </header>
  <article class="onebox-body">
    <img src="" class="thumbnail" width="" height="">

<h3><a href="https://terminusdb.com/docs/tutorials/share-tutorial/" target="_blank" rel="noopener">My First Shared Database</a></h3>

<p>Documentation for TerminusDB</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736/2">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736/2</link>
        <pubDate>Wed, 03 Feb 2021 19:20:10 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-736-2</guid>
        <source url="https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736.rss">TerminusDB: Exciting stuff for fediverse projects</source>
      </item>
      <item>
        <title>TerminusDB: Exciting stuff for fediverse projects</title>
        <dc:creator><![CDATA[aschrijver]]></dc:creator>
        <description><![CDATA[
            <p>I have been actively reading up on a very interesting database product I came across, which - with its linked data support - is very interesting to fediverse impls. Copying from <a href="https://forum.solidproject.org/t/terminusdb-a-delightful-database-for-linked-data/3140" rel="nofollow noopener">earlier posts</a> on Solid forum:</p>
<hr>
<p>I recently started <a href="https://codeberg.org/teaserbot-labs/delightful" rel="nofollow noopener">delightful</a> project, and - while adding a bunch of graph db’s to <a href="https://codeberg.org/yarmo/delightful-databases/src/branch/master/README.md" rel="nofollow noopener">delightful-databases</a> - bumped into TerminusDB.</p>
<p>I think this is a <em>very</em> interesting project for those working with linked data. I won’t duplicate its features here but give you the link:</p>
<p><a href="https://terminusdb.com/" class="onebox" target="_blank" rel="nofollow noopener">https://terminusdb.com/</a></p>
<p>If you found that interesting then you should really read the recent Hacker News discussion where the team gives lotsa background and answers a whole bunch of questions (such as why didn’t you implement SPARQL querying?):</p>
<p><a href="https://news.ycombinator.com/item?id=22867767" class="onebox" target="_blank" rel="nofollow noopener">https://news.ycombinator.com/item?id=22867767</a></p>
<p>Some small feature summary might be in order, to demonstrate why I find this so exciting:</p>
<ul>
<li>The <a href="https://terminusdb.com/docs/schema" rel="nofollow noopener">db schema</a> is defined in OWL (used in a closed-world perspective)</li>
<li>Most operation occurs in-memory, but is persisted in a forward-only log (similar to git)</li>
<li>This “git-for-data” approach allows branch, merge, squash, rollback, diff, blame, and time-travel, etc.</li>
<li>JSON-LD is interchange format, suitable for web, but editing in turtle is possible</li>
<li>You can query any part of a graph and retrieve as a JSON-LD document (serialized to the depth you want)</li>
<li>Query format is also JSON-LD, making queries composable and you can store/query queries like normal data</li>
<li>Client-side the queries are created using fluent JS (for web devs) and/or Ruby (for data scientists)</li>
<li>Provides transaction processing and updates using immutable database data structures</li>
<li>Through this immutability the db regains full ACID support</li>
</ul>
<p>The feature “AI code generation” is confusing but means:</p>
<blockquote>
<p>We generate data-input forms automatically from the structure of schema definitions in the database - the same definitions which make it possible to marshall data from JSON-LD documents into a graph and back.</p>
</blockquote>
<p>About the persistence of data:</p>
<blockquote>
<p>The database is in memory but we journal all transactions to disk, so it is persistent. In fact it’s so persistent that it never goes away. We have an append-only storage approach allowing you to do time-travel. You can query past versions, or look at differences, or even branch from a previous version of the database.</p>
</blockquote>
<p>The canary release of TerminusDB 2.0 was just unveiled in this video: <a href="https://invidio.us/watch?v=jX4DMGgfr5M" rel="nofollow noopener">https://invidio.us/watch?v=jX4DMGgfr5M</a><br>
It allows branching, merging of db’s and cool stuff like time travel.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736/1">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736/1</link>
        <pubDate>Fri, 05 Jun 2020 10:31:21 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-736-1</guid>
        <source url="https://socialhub.activitypub.rocks/t/terminusdb-exciting-stuff-for-fediverse-projects/736.rss">TerminusDB: Exciting stuff for fediverse projects</source>
      </item>
  </channel>
</rss>
