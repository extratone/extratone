<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>How to handle Webfinger for group discovery</title>
    <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418</link>
    <description>Hi everyone, I&#39;m a contributor to [Lemmy](https://github.com/dessalines/lemmy), and have recently implemented Webfinger support for the project. That was already hard enough without any proper spec of how Webfinger is used by ActivityPub implementations. Now the problem is, Lemmy is mainly focused on groups (its a reddit alternative), but I am not aware of any other ActivityPub projects that support groups.

So my question is, what is the best way to handle Webfinger for groups? Webfinger URLs for user accounts look like this:
```
https://radical.town/.well-known/webfinger?resource=acct:felix@radical.town
```

The easiest option that will most likely be supported by all existing projects is to use the same URL format for groups. But that will result in problems as soon as we also make users discoverable over webfinger, as users and groups with the same name will collide. 

So I guess the next best option is to replace `acct:` with something else, like `group:`, like this:
```
https://radical.town/.well-known/webfinger?resource=group:main@dev.lemmy.ml
```

Is there already some existing de-facto standard for this, or any other suggestion that would make compatiblity with other projects easier?</description>
    
    <lastBuildDate>Fri, 10 Jan 2020 22:34:18 +0000</lastBuildDate>
    <category>Server to Server</category>
    <atom:link href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[grishka]]></dc:creator>
        <description><![CDATA[
            <p>Still, I don’t understand why would any of you want to make group and user aliases be different namespaces and so allow there to be a user and a group with the same alias on the same instance. This would be very confusing UX.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/14">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/14</link>
        <pubDate>Fri, 10 Jan 2020 22:34:18 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-14</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[trwnh]]></dc:creator>
        <description><![CDATA[
            <p>Another thing to consider: Webfinger in Mastodon is used primarily to allow mentions. Is your project going to use mentions of groups? If not, <code>acct:</code> lookup isn’t necessary – you can use the HTTPS URL, either transparently proxied/routed to the ID if the proper Accept header is provided, or you can still use Webfinger but with <code>https:</code> instead.</p>
<p>There’s nothing limiting <code>acct:</code> to Persons instead of Groups – what it represents in Mastodon’s expectations is a single shared namespace for actors according to a certain domain.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/13">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/13</link>
        <pubDate>Fri, 10 Jan 2020 19:37:05 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-13</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[nedjo]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>the thing you will have to keep in mind is that mastodon et al expect <code>acct:username@domain</code> , but it is your decision whether you want to force this compatibility or not</p>
</blockquote>
<p>Yeah, good point. The workarounds I suggested above are going to cause more problems than they solve.</p>
<p>It seems to come down to the non-ActivityPub convention of a handle in the form <span class="mention">@actorname</span>@domain.name, rather than the AP <code>id</code> URI. <span class="mention">@actorname</span>@domain.name <em>assumes</em> that all actors are users, and so can be looked up (again, by convention, using Webfinger) using the <code>acct</code> schema, which as the <a href="https://tools.ietf.org/html/draft-ietf-appsawg-acct-uri-06" rel="nofollow noopener">acct draft</a> makes explicit is:</p>
<blockquote>
<p>a way to identify a user’s account at a service provider</p>
</blockquote>
<p>And therefore limited, in most cases, to <code>Person</code> actors. (Sure, a <code>Group</code> <em>could</em> be a user on a site, but most often that’s not going to be the case.)</p>
<p>Yes, we <em>could</em> mess with the <span class="mention">@actorname</span>@domain.name format, injecting a schema in there somewhere (<span class="mention">@acct</span>:actorname@domain.name), but (a) that’s not supported anywhere and (b) it pretty much defeats the original reason for the <span class="mention">@actorname</span>@domain.name format and corresponding Webfinger workaround–that it’s considered intuitive.</p>
<p>So probably we’re left with:</p>
<ul>
<li>For all actor types, the <code>id</code> URI works. <code>Group</code> actors use the <code>id</code>, not the <span class="mention">@actorname</span>@domain.name format, for their handle. Webfinger doesn’t come into play.</li>
<li>For <code>Person</code> actor types only, and where the <code>Person</code> represents a user with an account on the site, <span class="mention">@actorname</span>@domain.name is a secondary, alternate handle format, but one that isn’t guaranteed to be supported by all ActivityPub implementations.</li>
</ul>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/12">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/12</link>
        <pubDate>Fri, 10 Jan 2020 18:13:44 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-12</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[trwnh]]></dc:creator>
        <description><![CDATA[
            <p>option 3 is probably the most transparent and consistent way to handle things, i think? but also, if you want to avoid namespace collisions then it does make sense to have the URI handle this. Perhaps something like <code>acct:group:</code> as a subset of <code>acct:</code>?</p>
<p>the thing you will have to keep in mind is that mastodon et al expect <code>acct:username@domain</code>, but it is your decision whether you want to force this compatibility or not. if you do, then option 3 will work.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/11">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/11</link>
        <pubDate>Fri, 10 Jan 2020 07:36:41 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-11</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[nedjo]]></dc:creator>
        <description><![CDATA[
            <p>I’ve been considering this question too for Drupal, where as well as users there can be groups through use of plugins like the Groups module.</p>
<p>Options I’ve come up with are:</p>
<ul>
<li>
<strong>Prevent name collisions.</strong> User and group names are globally unique. Probably not an option in many cases.</li>
<li>
<strong>Allow groups and users to have the same name, but assign an alias in the case of collisions.</strong> For example if a user is created with the name “example” on a site where there is already an “example” group, the user is assigned the alias “example-1” which leads to the handle <span class="mention">@example-1</span>@somedomain.org.</li>
<li>
<strong>For handles, use a convention where a string is appended to all group handles.</strong> A user “example” is <span class="mention">@example</span>@somedomain.org while a group “example” is something like <span class="mention">@example-group</span>@somedomain.org.</li>
</ul>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/10">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/10</link>
        <pubDate>Fri, 10 Jan 2020 01:36:48 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-10</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[grishka]]></dc:creator>
        <description><![CDATA[
            <p>I haven’t published anything yet because it’s currently too far from being useful, and I haven’t even started implementing groups so most of this is theoretical. <a href="https://friends.grishka.me/grishka" rel="nofollow noopener">There is a live instance I mostly use for testing</a> that successfully federates with the existing microblogging software.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/9">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/9</link>
        <pubDate>Wed, 25 Dec 2019 16:51:01 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-9</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[nutomic]]></dc:creator>
        <description><![CDATA[
            <p>Well in Lemmy, users and groups are completely seperate, so you can have a group and a user with the same name of <code>test</code>. I also dont see anything in the activitypub spec that would prohibit this.</p>
<p>Can you post a link to your project? Search didnt bring anything up.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/8">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/8</link>
        <pubDate>Wed, 25 Dec 2019 16:37:45 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-8</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[grishka]]></dc:creator>
        <description><![CDATA[
            <p>I’m planning to have groups in Smithereen, but thought they shouldn’t be any different from users on webfinger level, it’s just that the ActivityPub object that you’d fetch would be <code>Group</code> instead of <code>Person</code> <img src="https://socialhub.activitypub.rocks/images/emoji/twitter/thinking.png?v=9" title=":thinking:" class="emoji" alt=":thinking:"></p>
<p>It makes sense to do it as <code>acct:</code> because groups and users share the username namespace (for how I see it, anyway). You can’t have both a user and a group with the same username on the same instance.</p>
<p>It also makes sense to do it as <code>group:</code> because I’m going to store users and groups in separate tables in my database. This way I’ll know which one to select from, and whoever is sending the request can be sure that looking up a user won’t unexpectedly return a group and vice versa.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/7">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/7</link>
        <pubDate>Tue, 24 Dec 2019 20:36:15 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-7</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[nutomic]]></dc:creator>
        <description><![CDATA[
            <p>I actually saw this PR before, but it doesnt include anything about webfinger.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/5">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/5</link>
        <pubDate>Sun, 22 Dec 2019 10:51:42 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-5</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[wakest]]></dc:creator>
        <description><![CDATA[
            <p>this was just merged into mainline Mastodon<br>
<aside class="onebox githubpullrequest">
  <header class="source">
      <a href="https://github.com/tootsuite/mastodon/pull/12071" target="_blank" rel="nofollow noopener">github.com/tootsuite/mastodon</a>
  </header>
  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Pull Request">
    <svg width="60" height="60" class="github-icon" viewbox="0 0 12 16" aria-hidden="true"><path d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/tootsuite/mastodon/pull/12071" target="_blank" rel="nofollow noopener">Add basic support for group actors</a>
    </h4>

    <div class="branches">
      <code>tootsuite:master</code> ← <code>fedibird:add-basic-support-for-group-actor</code>
    </div>

    <div class="github-info">
      <div class="date">
        opened <span class="discourse-local-date" data-format="ll" data-date="2019-10-03" data-time="18:31:26" data-timezone="UTC">06:31PM - 03 Oct 19 UTC</span>
      </div>

      <div class="user">
        <a href="https://github.com/noellabo" target="_blank" rel="nofollow noopener">
          <img alt="noellabo" src="https://socialhub.activitypub.rocks/uploads/default/original/1X/cee1823d5a11b5d718a0b7583b4ef6fc8ab86604.png" class="onebox-avatar-inline" width="20" height="20">
          noellabo
        </a>
      </div>

      <div class="lines" title="7 commits changed 8 files with 118 additions and 9 deletions">
        <a href="https://github.com/tootsuite/mastodon/pull/12071/files" target="_blank" rel="nofollow noopener">
          <span class="added">+118</span>
          <span class="removed">-9</span>
        </a>
      </div>
    </div>

  </div>
</div>
  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
thought I would pass this info here as it seems relevant</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/4">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/4</link>
        <pubDate>Sun, 22 Dec 2019 08:28:40 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-4</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[nutomic]]></dc:creator>
        <description><![CDATA[
            <p>As far as I know, webfinger is required to support eg discovery through the Mastodon search, so that something like <code>!main@dev.lemmy.ml</code> can be turned into the actual URI that is used for ActivityPub. Sure we could always use the URI, but that would not be consistent with the functionality for discovering users, and also more complicated for end users.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/3">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/3</link>
        <pubDate>Sun, 22 Dec 2019 01:15:26 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-3</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[nightpool]]></dc:creator>
        <description><![CDATA[
            <p>what would be the purpose of implementing webfinger for groups? what do you gain over, e.g., a URI?</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/2">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/2</link>
        <pubDate>Sun, 22 Dec 2019 01:04:08 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-2</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
      <item>
        <title>How to handle Webfinger for group discovery</title>
        <dc:creator><![CDATA[nutomic]]></dc:creator>
        <description><![CDATA[
            <p>Hi everyone, I’m a contributor to <a href="https://github.com/dessalines/lemmy" rel="nofollow noopener">Lemmy</a>, and have recently implemented Webfinger support for the project. That was already hard enough without any proper spec of how Webfinger is used by ActivityPub implementations. Now the problem is, Lemmy is mainly focused on groups (its a reddit alternative), but I am not aware of any other ActivityPub projects that support groups.</p>
<p>So my question is, what is the best way to handle Webfinger for groups? Webfinger URLs for user accounts look like this:</p>
<pre><code class="lang-auto">https://radical.town/.well-known/webfinger?resource=acct:felix@radical.town
</code></pre>
<p>The easiest option that will most likely be supported by all existing projects is to use the same URL format for groups. But that will result in problems as soon as we also make users discoverable over webfinger, as users and groups with the same name will collide.</p>
<p>So I guess the next best option is to replace <code>acct:</code> with something else, like <code>group:</code>, like this:</p>
<pre><code class="lang-auto">https://radical.town/.well-known/webfinger?resource=group:main@dev.lemmy.ml
</code></pre>
<p>Is there already some existing de-facto standard for this, or any other suggestion that would make compatiblity with other projects easier?</p>
          <p><a href="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/1">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418/1</link>
        <pubDate>Sun, 22 Dec 2019 00:31:39 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-418-1</guid>
        <source url="https://socialhub.activitypub.rocks/t/how-to-handle-webfinger-for-group-discovery/418.rss">How to handle Webfinger for group discovery</source>
      </item>
  </channel>
</rss>
