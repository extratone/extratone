<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Delivery</title>
    <link>https://socialhub.activitypub.rocks/t/delivery/1694</link>
    <description>I&#39;m a little bit confused by:

### 6.11 Delivery
Federated servers *MUST* perform delivery on all Activities posted to the **outbox** according to [ outbox delivery](https://www.w3.org/TR/activitypub/#outbox-delivery).

### 7.1 Delivery
*The following is required by federated servers communicating with other federated servers only.*

I understand it like this:
if only C2S is implemented, then there is no delivery between actors.
And that sounds strange, doesn&#39;t it? Why should there be no delivery without federation?</description>
    
    <lastBuildDate>Tue, 04 May 2021 04:01:16 +0000</lastBuildDate>
    <category>ActivityPub</category>
    <atom:link href="https://socialhub.activitypub.rocks/t/delivery/1694.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Delivery</title>
        <dc:creator><![CDATA[naturzukunft]]></dc:creator>
        <description><![CDATA[
            <p>I will mark a received activity as “already received” and manage the internal delivery myself. Do you see any problems? I would then only actually process one http request and ignore others.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/delivery/1694/6">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/delivery/1694/6</link>
        <pubDate>Tue, 04 May 2021 04:01:16 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-1694-6</guid>
        <source url="https://socialhub.activitypub.rocks/t/delivery/1694.rss">Delivery</source>
      </item>
      <item>
        <title>Delivery</title>
        <dc:creator><![CDATA[cjs]]></dc:creator>
        <description><![CDATA[
            <p>Yep. There’s <em>a</em> solution available in the form of <code>sharedInbox</code> but that breaks the Actor model.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/delivery/1694/5">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/delivery/1694/5</link>
        <pubDate>Mon, 03 May 2021 21:22:31 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-1694-5</guid>
        <source url="https://socialhub.activitypub.rocks/t/delivery/1694.rss">Delivery</source>
      </item>
      <item>
        <title>Delivery</title>
        <dc:creator><![CDATA[naturzukunft]]></dc:creator>
        <description><![CDATA[
            <p>If Jane@serverA sends a message to her followers and her followers collection contains 100 Actors from serverB, so serverB receives 100 HTTP Request? Or did I read something over?</p>
          <p><a href="https://socialhub.activitypub.rocks/t/delivery/1694/4">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/delivery/1694/4</link>
        <pubDate>Mon, 03 May 2021 15:34:03 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-1694-4</guid>
        <source url="https://socialhub.activitypub.rocks/t/delivery/1694.rss">Delivery</source>
      </item>
      <item>
        <title>Delivery</title>
        <dc:creator><![CDATA[naturzukunft]]></dc:creator>
        <description><![CDATA[
            <p>ok, that sounds exciting. Maybe the view of activityPub is a bit different for all of us. I plan to implement an activityPub server and not a server that “only” speaks activityPub. That’s probably what makes it so complicated for me. So I want to cover as many useCases as possible on the server and not specialise. and if there are things that are not possible, the server should be extendable.</p>
<p>For now, I think I will handle each new activity in each servers outbox in a federated way and also do the http delivery for actors, that are on the same server.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/delivery/1694/3">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/delivery/1694/3</link>
        <pubDate>Mon, 03 May 2021 13:44:26 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-1694-3</guid>
        <source url="https://socialhub.activitypub.rocks/t/delivery/1694.rss">Delivery</source>
      </item>
      <item>
        <title>Delivery</title>
        <dc:creator><![CDATA[cjs]]></dc:creator>
        <description><![CDATA[
            <p>If the client is a stateful actor, and different servers are providing different specific capabilities (ex: a calendar, a budget planner, a sleep tracker), then having a Client that successfully interoperates with each Server without having to implement a different REST API means the client is free to choose other methods to interact with the outside world – it could be ActivityPub federation (in which the “C” in C2S could also be the “S” in S2S or only federating public calendar view of the actor, the “S” in C2S also being the “S” in S2S) or something else.</p>
<p>This C2S thinking was the original impetus for ActivityPub, and S2S was the second thought. Which is inverted to today’s landscape.</p>
          <p><a href="https://socialhub.activitypub.rocks/t/delivery/1694/2">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/delivery/1694/2</link>
        <pubDate>Mon, 03 May 2021 13:37:19 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-1694-2</guid>
        <source url="https://socialhub.activitypub.rocks/t/delivery/1694.rss">Delivery</source>
      </item>
      <item>
        <title>Delivery</title>
        <dc:creator><![CDATA[naturzukunft]]></dc:creator>
        <description><![CDATA[
            <p>I’m a little bit confused by:</p>
<h3>
<a name="611-delivery-1" class="anchor" href="#611-delivery-1"></a>6.11 Delivery</h3>
<p>Federated servers <em>MUST</em> perform delivery on all Activities posted to the <strong>outbox</strong> according to <a href="https://www.w3.org/TR/activitypub/#outbox-delivery" rel="noopener nofollow ugc"> outbox delivery</a>.</p>
<h3>
<a name="71-delivery-2" class="anchor" href="#71-delivery-2"></a>7.1 Delivery</h3>
<p><em>The following is required by federated servers communicating with other federated servers only.</em></p>
<p>I understand it like this:<br>
if only C2S is implemented, then there is no delivery between actors.<br>
And that sounds strange, doesn’t it? Why should there be no delivery without federation?</p>
          <p><a href="https://socialhub.activitypub.rocks/t/delivery/1694/1">Read full topic</a></p>
        ]]></description>
        <link>https://socialhub.activitypub.rocks/t/delivery/1694/1</link>
        <pubDate>Mon, 03 May 2021 13:32:41 +0000</pubDate>
        <guid isPermaLink="false">socialhub.activitypub.rocks-post-1694-1</guid>
        <source url="https://socialhub.activitypub.rocks/t/delivery/1694.rss">Delivery</source>
      </item>
  </channel>
</rss>
